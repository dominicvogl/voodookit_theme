{"version":3,"sources":["lazyload.js","feature.js","masonry.js","slideout.js","foundation.js","slick.js"],"names":["window","requestAnimationFrame","module","exports","eve","e","requestAnimFrame","update","endsWithDotSvg","src","define","amd","factory","document","documentElement","className","matchesMethod","ElemProto","Element","prototype","addEventListener","logElementEvent","i","prefixes","element","callback_exit","method","selector","elem","callback_finish","Emitter","prevArrow","on","event","listener","this","_eventCollection","slider","slick","once","slideout","off","Slideout","querySelector","close","fn","paddingBottom","setBodyPadding","offsetHeight","listeners","forEach","toggler","initTogglerPadding","toggle","_classCallCheck"],"mappings":"0bAAAA,OAAAC,oGCYAC,EAAAC,wBCXA,IAAAC,qBACAA,EAAAC,MCFAC,EAAAC,qGFwBA,SAAAC,EAAAA,GAEA,aAEAA,mBAAAC,QAAAC,OAAAC,IAEAD,OAAAE,GACA,iBAAAV,GAAAA,EAAAC,sBAKAU,EAAAC,gBAAAC,IAZA,CAgBAf,OAAA,wBGvCA,IAAAgB,EAAA,WACA,IAAAC,EAAAjB,OAAAkB,QAAAC,uBJAAC,MAAAA,+BAIA,MAAAC,kBASAA,oCAAAA,EAAAA,EAAAC,EAAAC,EAAAC,OAAAF,IAAA,CADA,IAGAG,EAHAF,EAAAD,GAGA,kBACAD,GAAAA,EAAAK,GADA,OAAAA,GIhBA,GJuBAL,OAAAA,SAAAG,EAAAG,GADA,OAAAC,EAAAZ,GAAAW,OAQA,IAAAE,EAAAA,CAAAA,SAAAA,EAAA3B,EAAA2B,GACAR,6BAgBA,IA9CAS,GKOAC,EAAAA,UAAAC,GAAA,SAAAC,EAAAC,UAHAC,KAAAC,iBAAAD,KAAAC,kBAAA,GAYAC,KAAAC,iBAAAL,GAAAE,KAAAC,iBAAAH,IAAA,0CAIAH,EAAAX,UAAAoB,KAAA,SAAAN,EAAAC,cFlBAM,SAAAA,IACAA,EAAAC,IAAAC,EAAAA,GACAR,EAAArB,MAAA8B,KAAAA,WAOAC,OAJAC,EAAAX,SAAAA,eAIAC,MAkBAtB,EAAA8B,UAAAA,IAAA,SAAAG,EAAAA,gBAKAC,OAAAA,KAAAA,mBAAAC,EAAAb,KAAAC,iBAAAH,MAIAgB,EAAAC,QAAA,SAAAL,EAAAvB,0BAGAyB,EAAAI,OAAAH,EAAAA,KAOA,IAAAI,EAAAA,yCAIAC,6WDlDAC,CAAAnB,KAAAL","file":"app.min.js","sourcesContent":["import LazyLoad from \"vanilla-lazyload\";\n\naddEventListener('DOMContentLoaded', function() {\n\n\tconsole.log('D00M is ready');\n\n\tfunction logElementEvent(eventName, element) {\n\t\tconsole.log(\n\t\t\tDate.now(),\n\t\t\teventName,\n\t\t\telement.getAttribute(\"data-src\")\n\t\t);\n\t}\n\n\tconst callback_enter = function(element) {\n\t\tlogElementEvent(\"üîë ENTERED\", element);\n\t};\n\tconst callback_exit = function(element) {\n\t\tlogElementEvent(\"üö™ EXITED\", element);\n\t};\n\tconst callback_reveal = function(element) {\n\t\tlogElementEvent(\"üëÅÔ∏è REVEALED\", element);\n\t};\n\tconst callback_loaded = function(element) {\n\t\tlogElementEvent(\"üëç LOADED\", element);\n\t};\n\tconst callback_error = function(element) {\n\t\tlogElementEvent(\"üíÄ ERROR\", element);\n\t\telement.src =\n\t\t\t\"https://via.placeholder.com/440x560/?text=Error+Placeholder\";\n\t};\n\tconst callback_finish = function() {\n\t\tlogElementEvent(\"‚úîÔ∏è FINISHED\", document.documentElement);\n\t};\n\n\tconst lazyLoadInstance = new LazyLoad({\n\n\t\telements_selector: \".lazyload\",\n\t\tuse_native: true,\n\t\tload_delay: 200,\n\t\tcallback_enter: callback_enter,\n\t\tcallback_exit: callback_exit,\n\t\tcallback_reveal: callback_reveal,\n\t\tcallback_loaded: callback_loaded,\n\t\tcallback_error: callback_error,\n\t\tcallback_finish: callback_finish\n\t\t// ... more custom settings?\n\t});\n});\n","import 'feature.js';\n\n/**\n * Feature Detection Script\n *\n * @version 1.0.0\n * @var feature\n */\n\n// Check if Javascript is active, overwrite no-js class\ndocument.documentElement.className = \"js\";\n\n// add message\nconsole.info(\"%cThis site was build with love \" + \"%c(https://dominicvogl.de)\", \"\", \"color: #2199e8\");\n\n// check if svg is available in this browser\nif(feature.svg){\n\t// ... or hust ad \".svg\" to <html>\n\tdocument.documentElement.className += \" svg\";\n\n} else {\n\n\t// when no svg is supportet change \".svg\" to \".png\"\n\tvar imgs = document.getElementsByTagName('img');\n\tvar endsWithDotSvg = /.*\\.svg$/\n\tvar i = 0;\n\tvar l = imgs.length;\n\tfor(; i != l; ++i) {\n\t\tif(imgs[i].src.match(endsWithDotSvg)) {\n\t\t\timgs[i].src = imgs[i].src.slice(0, -3) + 'png';\n\t\t}\n\t}\n}\n\n// check touch support and render class to <html>\nif(feature.touch) {\n\tdocument.documentElement.className += \" touch\";\n}\nelse {\n\tdocument.documentElement.className += \" no-touch\";\n}\n","import $ from 'jquery';\nimport jQueryBridget from 'jquery-bridget';\nimport Masonry from 'masonry-layout';\n\n// make Masonry a jQuery plugin\njQueryBridget( 'masonry', Masonry, $ );\n\n// now you can use $().masonry()\n$('.grid').masonry({\n\tcolumnWidth: 200,\n});\n","import { MediaQuery } from 'foundation-sites';\nimport Slideout from 'slideout';\n\nlet toggler = document.querySelector('.js-toggle-slideout');\nlet slideout;\nslideout = new Slideout({\n\t'panel': document.querySelector('.js-slideout-panel'),\n\t'menu': document.querySelector('.js-slideout-menu'),\n\t'padding': 256,\n\t'tolerance': 70\n});\n\nlet close;\nclose = (eve) => {\n\teve.preventDefault();\n\tslideout.close();\n};\n\nslideout\n\t.on('beforeopen', function() {\n\t\tthis.panel.classList.add('panel-open');\n\t})\n\t.on('open', function() {\n\t\tthis.panel.addEventListener('click', close);\n\t})\n\t.on('beforeclose', function() {\n\t\tthis.panel.classList.remove('panel-open');\n\t\tthis.panel.removeEventListener('click', close);\n\t});\n\nconst setBodyPadding = ( togglerHeight ) => {\n\tdocument.querySelector('body').style.paddingBottom = togglerHeight + 'px';\n};\n\nconst initTogglerPadding = (toggler) => {\n\tif(toggler.offsetHeight > 0 && !Foundation.MediaQuery.is('large')) {\n\t\tsetBodyPadding(toggler.offsetHeight);\n\t}\n\n\t$(window).on('changed.zf.mediaquery', function(event, newSize, oldSize) {\n\t\t// console.log(event, newSize, oldSize);\n\n\t\ttoggler = document.querySelector('.js-toggle-slideout');\n\t\tsetBodyPadding(toggler.offsetHeight);\n\n\t});\n};\n\n\n// Init functions\ninitTogglerPadding(toggler);\n\n// Events\ntoggler.addEventListener('click', function() {\n\tslideout.toggle();\n});\n","// import Foundation from 'foundation-sites';\n// const $mediaquery = new Foundation.MediaQuery(current);\n//\n// console.info($mediaquery);\n","import 'slick-slider'\n\n$('.js-slick-slider').each(function() {\n\n\tvar slider = $(this);\n\n\tslider.slick({\n\t\t// options\n\t\tmobileFirst: true,\n\t\tprevArrow: '<button class=\"slick-arrow slick-prev\"><svg class=\"sprite sprite--arrow-left\">\\n' +\n\t\t\t'\\t\\t\\t<use xlink:href=\"http://voodookit.loc/custom/themes/voodookit/dist/assets/svg/sprite-symbol.svg#arrow-left\"></use>\\n' +\n\t\t\t'\\t\\t</svg></button>',\n\t\tnextArrow: '<button class=\"slick-arrow slick-next\"><svg class=\"sprite sprite--arrow-right slick-next\">\\n' +\n\t\t\t'\\t\\t\\t<use xlink:href=\"http://voodookit.loc/custom/themes/voodookit/dist/assets/svg/sprite-symbol.svg#arrow-right\"></use>\\n' +\n\t\t\t'\\t\\t</svg></button>',\n\t});\n\n\t$('.sprite--arrow-right').on('click', function () {\n\t\tslider.slick('slickNext');\n\t})\n});\n\n$('.js-postloop-carousel').each(function() {\n\n\t$(this).slick(\n\t\t{\n\t\t\t// options\n\t\t\tslidesToScroll: 1,\n\t\t\tslidesToShow: 1,\n\t\t\tmobileFirst: true,\n\t\t\tvariableWidth: true,\n\t\t\tinfinite: false,\n\t\t\tresponsive: [\n\t\t\t\t{\n\t\t\t\t\tbreakpoint: 768,\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tslidesToShow: 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t)\n\n});\n"]}